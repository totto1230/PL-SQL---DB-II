CREATE OR REPLACE PROCEDURE A_TX2_JOSEPH_GRANADOS AS 

CURSOR CURSOR_RESERVAS_HABITACIONES IS
                  SELECT IDHABITACION, IDRESERVA, IDRESERVAHABITACION
                  FROM TABLA_RESERVAS.RESERVASHABITACIONES RH
                  WHERE RH.IDRESERVA IN (SELECT IDRESERVA
                                          FROM TABLA_RESERVAS.RESERVAS RS, TABLA_FACTURAS.FACTURAS FS
                                          WHERE RS.IDFACTURA=FS.IDFACTURA)
                  ORDER BY IDRESERVAHABITACION;

CURSOR CURSOR_SERVICIO_HABITACION (vIDRESERVAHABITACION number) IS
                                    SELECT SH.IDSERVICIO , SH.CANTIDAD
                                    FROM TABLA_RESERVAS.SERVICIOSHABITACION SH
                                    WHERE SH.IDRESERVAHABITACION = vIDRESERVAHABITACION
                                    ORDER BY 1;
                                    

--COSTO HABITACION POR DIA
COSTOHABITACION NUMBER;

--NUMERO DE PERSONAS POR HABITACION
NUMERO_PERSONAS NUMBER;

--Numero de dias DE LA RESERVA
NUMERO_DIAS NUMBER;

--COSTO DEL SERVICIO
COSTO_SERVICIO NUMBER;

--ID DE LA FACTURA
IDFACTURA NUMBER;

--REGISTRO PARA GUARDAR LOS DATOS DEL CURSOR
rCURSOR_SERVICIO_HABITACION CURSOR_SERVICIO_HABITACION%ROWTYPE;

--VARIABLE PARA CONTABILIZAR EL COSTO DE LOS SERVICIOS
TOTAL_SERVICIOS NUMBER;

--VARIABLE PARA CONTABILIZAR EL COSTO DE LAS RESERVAS
TOTAL_RESERVA NUMBER;

--VARIABLE PARA CONTABILIZAR EL COSTO TOTAL
TOTAL_PAGAR NUMBER;

BEGIN
  FOR CADARESERVA IN CURSOR_RESERVAS_HABITACIONES LOOP
    TOTAL_RESERVA:=0;
    TOTAL_PAGAR:=0;
    TOTAL_SERVICIOS:=0;
    
    --SE ABRE EL CURSOR
    OPEN CURSOR_SERVICIO_HABITACION (CADARESERVA.IDRESERVAHABITACION);
    
    
    --!!!!! GENERAR COSTOS DE LA HABITACION SIN SERVICIOS !!!!!
    --PROCEDIMIENTO QUE RETORNA EL COSTO DE LA HABITACION PASANDOLE EL ID DE LA HABITACION
    A_RETORNAR_COSTO_HABITACION(CADARESERVA.IDHABITACION, COSTOHABITACION);
    --FUNCION QUE RETORNA EL NUMERO DE DIAS PARA LA RESERVA QUE RECIBE COMO PARAMETRO
    NUMERO_DIAS:=A_RETORNAR_NUMERO_DIAS(CADARESERVA.IDRESERVA)+1;
    --PROCEDIMIENTO QUE RETORNA EL NUMERO DE PERSONAS PARA EL ID DE LA HABITACION QUE RECIBE COMO PARAMETRO
    A_RETORNAR_PERSONAS_HABITACION(CADARESERVA.IDHABITACION, NUMERO_PERSONAS);
    --GENERA EL COSTO DE LAS HABITACIONES SIN EL SERVICIO
    TOTAL_RESERVA:=(COSTOHABITACION*NUMERO_PERSONAS*NUMERO_DIAS);
    --RETONA EL ID DE LA FACTURA ASOCIADA A LA RESERVA PARA PONER EL VALOR TOTAL DE LA RESERVA
    IDFACTURA:=A_RETORNAR_FACTURA_ID(CADARESERVA.IDRESERVA);
    --dbms_output.put_line (' ID RESERVA: '|| CADARESERVA.IDRESERVA || ' TOTAL_RESERVA ' || TOTAL_RESERVA || ' NUMERO DIAS: '|| NUMERO_DIAS);
    --!!!!! FIN GENERAR COSTOS DE LA HABITACION SIN SERVICIOS !!!!!
  
  
    LOOP
      FETCH CURSOR_SERVICIO_HABITACION INTO rCURSOR_SERVICIO_HABITACION;
      EXIT WHEN CURSOR_SERVICIO_HABITACION%NOTFOUND;
      COSTO_SERVICIO:= A_RETORNAR_COSTO_SERVICIO(rCURSOR_SERVICIO_HABITACION.IDSERVICIO);
      TOTAL_SERVICIOS:= TOTAL_SERVICIOS+(COSTO_SERVICIO*rCURSOR_SERVICIO_HABITACION.CANTIDAD);
    END LOOP;
    
    TOTAL_PAGAR:=TOTAL_RESERVA+TOTAL_SERVICIOS;
    --SE ACTUALIZA EL MONTO A PAGAR
    A_PONER_VALOR_FACTURA(TOTAL_PAGAR, IDFACTURA);
    --SE CIERRA EL CURSOR
    CLOSE CURSOR_SERVICIO_HABITACION;
  END LOOP;
END A_TX2_JOSEPH_GRANADOS;
